version: "3.9"

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: tatou-server:local
    ports:
      - "5000:5000"
    volumes:
      # persistent storage for PDFs / handout
      - user-files:/app/storage
      # mount your keys (public + private) at /app/server/keys
      - ./server/keys:/app/server/keys:ro
      # keep logs on host (optional)
      - ./server/logs:/app/logs
    environment:
      PYTHONUNBUFFERED: "1"

      # ---- DB (as you already had) ----
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: tatou
      DB_USER: ${MARIADB_USER}
      DB_PASSWORD: ${MARIADB_PASSWORD}

      # ---- RMAP config ----
      # Your server.py reads RMAP_KEYS_DIR and falls back to /app/src/...; keep this explicit:
      RMAP_KEYS_DIR: /app/server/keys
      # set this if your server_private.asc is passphrase-protected
      RMAP_SERVER_PRIV_PASSPHRASE: ${RMAP_SERVER_PRIV_PASSPHRASE}
      # what file to deliver when the link is used:
      RMAP_PDF_PATH: /app/storage/handout.pdf
      # one-time link TTL (seconds)
      RMAP_LINK_TTL: "600"

      # ---- App secrets (you already had) ----
      SECRET_KEY: ${SECRET_KEY}
      TATOU_SIGNING_SALT: ${TATOU_SIGNING_SALT}
      FLAG_2: ${FLAG_2}

    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mariadb:11.4
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: tatou
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./db/tatou.sql:/docker-entrypoint-initdb.d/10-tatou.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -u root --password=$MARIADB_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      UPLOAD_LIMIT: 64M
      MEMORY_LIMIT: 256M
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  db-data:
  user-files:
